/************************************************************
* Sicherung der Datenbasis
* Erstellt: 2018-05-15 08:19:47
* 
* HOST   : 134.130.125.86:7509
* SERVER : MANAGER
************************************************************/

 LIBRARY
    /acplt/DSServices
 END_LIBRARY;

 LIBRARY
    /acplt/Databases
 END_LIBRARY;

 LIBRARY
    /acplt/MessageSys
 END_LIBRARY;

 LIBRARY
    /acplt/TCPbind
 END_LIBRARY;

 LIBRARY
    /acplt/identification
 END_LIBRARY;

 LIBRARY
    /acplt/ksapi
 END_LIBRARY;

 LIBRARY
    /acplt/ksbase
 END_LIBRARY;

 LIBRARY
    /acplt/kshttp
 END_LIBRARY;

 LIBRARY
    /acplt/ksxdr
 END_LIBRARY;

 LIBRARY
    /acplt/lifeCycleEntry
 END_LIBRARY;

 LIBRARY
    /acplt/openAASDiscoveryServer
 END_LIBRARY;

 LIBRARY
    /acplt/openaas
 END_LIBRARY;

 LIBRARY
    /acplt/propertyValueStatement
 END_LIBRARY;

 INSTANCE  /data :
    CLASS /acplt/ov/domain;
 END_INSTANCE;

 INSTANCE  /data/kshttp :
    CLASS /acplt/ov/domain;
 END_INSTANCE;

 INSTANCE  /data/kshttp/sse%2Ehtml :
    CLASS /acplt/kshttp/staticfile;
    VARIABLE_VALUES
      content : INPUT STRING = "<!DOCTYPE html>
<html>
<head>
	<meta charset=\"windows-1252\">
	<title>Stats of database_free</title>
	<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/smoothie/1.27.0/smoothie.min.js\"></script>
</head>
<body>
	<h1>Stats of database_free</h1>
	
	<canvas id=\"mycanvas\" width=\"400\" height=\"100\"></canvas>
	
	<script type=\"text/javascript\">
	//an ajax request first
	var ajaxRequest;	
	try{
		// Opera 8.0+, Firefox, Safari
		ajaxRequest = new XMLHttpRequest();
	} catch (e){
		// Internet Explorer Browsers
		try{
			ajaxRequest = new ActiveXObject(\"Msxml2.XMLHTTP\");
		} catch (e2) {
			try{
				ajaxRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");
			} catch (e3){
				// Something went wrong
				document.getElementsByTagName(\"h1\")[0].innerHTML = \"Your browser is too old, sorry!\";
			}
		}
	}
	// got the database size - init everything else
	ajaxRequest.onreadystatechange = function(){
		\"use strict\";
		if(ajaxRequest.readyState === 4){
			setInterval(function() {
				var time = new Date().getTime();
				if(line1 && time-lastUpdate > 990){
					line1.append(time, lastData);
				}
			}, 1000);
			if(EventSource !== undefined){
				var source = new EventSource('/getVar?path=/vendor/database_free&stream=1&format=plain');
				source.onmessage = function(e) {
					lastUpdate = new Date().getTime();
					lastData = parseInt(e.data, 10);
					line1.append(lastUpdate, lastData);
					if(smoothie){
						smoothie.start();
					}
				};
				source.onerror  = function(e) {
					source.close();
					if(smoothie){
						smoothie.stop();
					}
				};
			}else{
				document.getElementsByTagName(\"h1\")[0].innerHTML = \"An error occured. Your browser does not support EventSource\";
			}
			if(typeof SmoothieChart === \"function\"){
				var smoothie = new SmoothieChart({ 
					grid: { 
						sharpLines:true,
						strokeStyle: 'rgb(125, 0, 0)',
						fillStyle: 'rgb(60, 0, 0)',
						lineWidth: 1,
						millisPerLine: 30000,
						verticalSections: 2
					}, 
					interpolation:'step',
					timestampFormatter:SmoothieChart.timeFormatter,
					millisPerPixel:500, 
					maxValue:parseInt(ajaxRequest.responseText, 10), 
					minValue:0
				});
				smoothie.addTimeSeries(line1, { strokeStyle: 'rgb(0, 255, 0)', fillStyle: 'rgba(0, 255, 0, 0.4)', lineWidth: 3 });
				smoothie.streamTo(document.getElementById('mycanvas'), 200);
			}
		}
	};
	ajaxRequest.open('GET', '/getVar?path=/vendor/database_size&format=plain', true);
	try{
		ajaxRequest.send(null);
	} catch(err){
		document.getElementsByTagName(\"h1\")[0].innerHTML = \"An error occured. Perhaps this file was not served from an OV webserver.\";
	}
	if(typeof TimeSeries !== \"function\"){
		document.getElementsByTagName(\"h1\")[0].innerHTML = \"Smoothie not loaded...\";
	}else{
		var line1 = new TimeSeries();
	}
	var lastUpdate = 0;
	var lastData = 0;
	</script>
</body>
</html>
";
      mimetype : INPUT STRING = "text/html";
      encoding : INPUT STRING = "windows-1252";
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 449;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /data/kshttp/index%2Ehtml :
    CLASS /acplt/kshttp/staticfile;
    VARIABLE_VALUES
      content : INPUT STRING = "<!DOCTYPE html>
<html>
	<head>
		<meta charset=\"windows-1252\">
		<meta name=\"viewport\" content=\"width=device-width\"><!-- no desktop view for mobile browsers -->
		<title>OV-http Server</title>
		<style type=\"text/css\">
			code{
				background-color: #DDDDFF;
				border: 1px solid #8080FF;
				color: #000080;
			}
			#idPlaygroundOutput, #idUrldisplay{
				background-color: lightgrey;
				border: 1px solid #8080FF;
				color: #000080;
				width:500px;
			}
			#idPlaygroundOutput{
				display:block;
			}
			input{
				transition: background-color 0.5s;
			}
			#idOutputformatSelect{
				width:90px;
			}
		</style>
	</head>
	<body>
		<h1>The Webserver is running!</h1>
		<p>Powered by ACPLT/OV. This server has some static files as a <a href=\"sse.html\">demo</a> and supports KS commands. This page is only a quick reference.<br>
		A modern OV-Server (like this) can be explored by the Tool <a href=\"http://rawgithub.com/acplt/henson/master/index.html\" target=\"_blank\">Henson</a> (requires internet connection).</p>
		<span id=\"idHmi\"></span>
		<span id=\"idServices\"></span>
		<h2>Supported KS commands</h2>
		<form action=\"#\">
			<fieldset id=\"idCommandPlayground\" style=\"display:none;\">
				<legend>Command playground</legend>
				<div>
					<label id=\"idSpanOutputformat\">output format:
						<select id=\"idOutputformatSelect\">
							<option value=\"ksx\">KSX 2.1r</option>
							<option value=\"tcl\">KSTCL (human readable errors)</option>
							<option value=\"plain\">text plain (no structure)</option>
						</select>
					</label>
					<select id=\"idServicelist\">
						<option value=\"none\">select type of request</option>
						<option value=\"getEP\">getEP</option>
						<option value=\"getVar\">getVar</option>
						<option value=\"setVar\">setVar</option>
						<option value=\"createObject\">createObject</option>
						<option value=\"deleteObject\">deleteObject</option>
						<option value=\"renameObject\">renameObject</option>
						<option value=\"link\">link</option>
						<option value=\"unlink\">unlink</option>
						<option value=\"getLogfile\">getLogfile</option>
					</select>
					<label id=\"idPathLabel\">path:
						<input id=\"idPathInput\" list=\"idPathlist\" value=\"\" placeholder=\"full path to the object/variable\" style=\"width:200px;\">
						<datalist id=\"idPathlist\">
							<optgroup label=\"dynamic entries\" id=\"idPathdirentries\"></optgroup>
							<optgroup label=\"dynamic entries\" id=\"idPathvarentries\"></optgroup>
							<optgroup label=\"default entries\" id=\"idPathdefaultentries\">
								<option label=\"root\" value=\"/\"></option>
								<option label=\"main engineering\" value=\"/TechUnits\"></option>
							</optgroup>
						</datalist>
					</label>
					<label id=\"idSecondtextLabel\" style=\"display:none;\">new value:
						<input id=\"idSecondtextInput\" placeholder=\"new value to set\" style=\"width:200px;\">
					</label>
					<label id=\"idSpanGetepRequestType\" style=\"display:none;\">request type:
						<select id=\"idGetepRequestTypeSelect\">
							<option value=\"OT_DOMAIN\">children (OT_DOMAIN)</option>
							<option value=\"OT_VARIABLE\">variables (OT_VARIABLE)</option>
							<option value=\"OT_LINK\">associations (OT_LINK)</option>
							<option value=\"OT_ANY\">all (OT_ANY)</option>
						</select>
					</label>
				</div>
				<input id=\"idUrldisplay\" value=\"\" placeholder=\"enter a request right here or use the boxes above\">
				<input type=\"submit\" id=\"idSubmitbutton\" value=\"send request\">
				<textarea readonly id=\"idPlaygroundOutput\">Reply will be displayed here</textarea>
			</fieldset>
		</form>
		<p>This server can generate answers in a TCL or KSX syntax. The TCL syntax is default. It is possible to select KSX with the 
		<a href=\"http://tools.ietf.org/html/rfc7231#section-5.3.2\">HTTP accept header</a>
		<code>Accept: text/ksx</code> or as a parameter in the GET request argument <code>&amp;format=ksx</code>.</p>
		
		<h3>GetVar</h3>
		<p>Gets one or multiple Variables.</p>
		example: <code>/getVar?format=ksx&amp;path=/vendor/database_free</code><br>
		example: <code>/getVar?format=ksx&amp;path[0]=/vendor/database_free&amp;path[1]=/vendor/database_size</code>
		
		<h3>SetVar</h3>
		<p>Sets one or multiple Variables. Note: The indexes of the parts are not relevant, only the order matters (second newvalue will be written into the second path). If fewer <code>vartype</code>s are given the last one will be used for the rest.</p>
		example: <code>/setVar?format=ksx&amp;path=/TechUnits/add1.IN1&amp;newvalue=4.5</code><br>
		example: <code>/setVar?format=ksx&amp;path=/TechUnits/add1.IN1&amp;newvalue=42&amp;vartype=KS_VT_UINT</code><br>
		example: <code>/setVar?format=ksx&amp;path[0]=/TechUnits/add1.IN1&amp;path[1]=/TechUnits/add2.IN1&amp;path[2]=.IN2&amp;newvalue[0]=3.2&amp;newvalue[1]=2&amp;newvalue[2]=1</code><br>
		example: <code>/setVar?format=ksx&amp;path[0]=/TechUnits/add1.IN1&amp;newvalue[0]=3.2&amp;path[1]=/TechUnits/add2.IN1&amp;newvalue[1]=2&amp;path[2]=.IN2&amp;newvalue[2]=1</code><br>
		example: <code>/setVar?format=ksx&amp;path[0]=/TechUnits/add1.IN1&amp;path[1]=/TechUnits/add2.IN1&amp;newvalue[0]=3.2&amp;newvalue[1]=2&amp;vartype[0]=KS_VT_SINGLE</code><br>
		example: <code>/setVar?format=ksx&amp;path=/TechUnits/bla.VecIntVariable&amp;newvalue={1}%20{10}</code><br>
		
		<h3>GetEP</h3>
		<p>Gets the engineering properties of an object. It has a few optional parameters:</p>
		<ul>
			<li><code>requestType</code> filters some type of result: childrens (default, <code>OT_DOMAIN</code>), variables (<code>OT_VARIABLE</code>), links (<code>OT_LINK</code>) or all (<code>OT_ANY</code>)</li>
			<li><code>nameMask</code> filters for names (<code>?</code> is an arbitrary character, <code>*</code> is an arbitrary amount of any characters). Default is <code>*</code></li>
			<li><code>scopeFlags</code> filters for the scope (<code>children</code> are normal children, <code>parts</code> are some hard wired objects). Default is no restriction</li>
			<li><code>requestOutput</code> a list of answser columns: <code>OP_NAME</code>, <code></code>, <code>OP_TYPE</code>, <code>OP_COMMENT</code>, <code>OP_ACCESS</code>, <code>OP_SEMANTIC</code>, <code>OP_CREATIONTIME</code>, <code>OP_CLASS</code>, <code>OP_TECHUNIT</code>, <code>OP_ASSOCIDENT</code>, <code>OP_ROLEIDENT</code>. Default is all of them in this order.</li>
		</ul>
		example: <code>/getEP?format=ksx&amp;path=/TechUnits/add1</code><br>
		example: <code>/getEP?format=ksx&amp;path=/TechUnits/add1&amp;requestType=OT_ANY</code>
		
		<h3>createObject</h3>
		<p>Instantiates new objects. Note: The indexes of the parts are not relevant, only the order matters. It has optional parameters:</p>
		<ul>
			<li><code>placementHint</code> defines the placement of the new object in the parent domain: <code>PMH_DEFAULT</code> = <code>PMH_END</code>, <code>PMH_BEGIN</code>, <code>PMH_BEFORE</code>, <code>PMH_AFTER</code></li>
			<li><code>placePath</code> defines the path of the partner if the Hint was <code>PMH_BEFORE</code> or <code>PMH_AFTER</code></li>
		</ul>
		example: <code>/createObject?format=ksx&amp;path=/TechUnits/add1&amp;factory=/acplt/iec61131stdfb/add</code><br>
		example: <code>/createObject?format=ksx&amp;Path[1]=/TechUnits/add1&amp;path[2]=/TechUnits/add2&amp;factory=/acplt/iec61131stdfb/add</code><br>
		
		<h3>deleteObject</h3>
		<p>Deletes objects.</p>
		example: <code>/deleteObject?format=ksx&amp;path=/TechUnits/add1</code><br>
		example: <code>/deleteObject?format=ksx&amp;path[1]=/TechUnits/add1&amp;path[2]=/TechUnits/add2</code><br>
		
		<h3>renameObject</h3>
		<p>Renames objects. Note: The indexes of the parts are not relevant, only the order matters. It has optional parameters:</p>
		<ul>
			<li><code>placementHint</code> defines the placement of the object in the parent domain: <code>PMH_DEFAULT</code> = <code>PMH_END</code>, <code>PMH_BEGIN</code>, <code>PMH_BEFORE</code>, <code>PMH_AFTER</code></li>
			<li><code>placePath</code> defines the path of the partner if the Hint was <code>PMH_BEFORE</code> or <code>PMH_AFTER</code></li>
		</ul>
		example: <code>/renameObject?format=ksx&amp;path=/TechUnits/add1&amp;newname=/TechUnits/add2</code><br>
		example: <code>/renameObject?format=ksx&amp;path[1]=/TechUnits/add1&amp;path[2]=/TechUnits/sub1&amp;newname[1]=/TechUnits/add2&amp;newname[2]=/TechUnits/sub2</code><br>
		
		<h3>linkObject</h3>
		<p>Links two pairs of objects with an OV association. It has optional parameters:</p>
		<ul>
			<li><code>placementHint</code> defines the placement of the object in the association: <code>PMH_DEFAULT</code>=<code>PMH_END</code>, <code>PMH_BEGIN</code>, <code>PMH_BEFORE</code>, <code>PMH_AFTER</code></li>
			<li><code>placePath</code> defines the path of the partner if the Hint was <code>PMH_BEFORE</code> or <code>PMH_AFTER</code></li>
		</ul>
		example: <code>/link?format=ksx&amp;path=/TechUnits/add1.taskparent&amp;element=/Tasks/UrTask</code><br>
		equivalent: <code>/link?format=ksx&amp;path=/Tasks/UrTask.taskchild&amp;element=/TechUnits/add1</code><br>
		example: <code>/link?format=ksx&amp;path[0]=/TechUnits/add1.taskparent&amp;element[0]=/Tasks/UrTask&amp;path[1]=/TechUnits/add2.taskparent&amp;element[1]=/Tasks/UrTask</code><br>
		example: <code>/link?format=ksx&amp;path=/TechUnits/add1.taskparent&amp;element=/Tasks/UrTask&amp;placementHint=BEGIN</code><br>
		example: <code>/link?format=ksx&amp;path=/TechUnits/add1.taskparent&amp;element=/Tasks/UrTask&amp;placementHint=BEFORE&amp;placePath=/TechUnits/sub1</code><br>
		
		<h3>unlinkObject</h3>
		<p>Unlinks two pairs of objects with an OV association.</p>
		example: <code>/unlink?format=ksx&amp;path=/TechUnits/add1.taskparent&amp;element=/UrTask</code><br>
		example: <code>/unlink?format=ksx&amp;path[0]=/TechUnits/add1.taskparent&amp;element[0]=/UrTask&amp;path[1]=/TechUnits/add2.taskparent&amp;element[1]=/UrTask</code><br>
		
		<h3>getLogfile</h3>
		<p>Outputs logfile outputs of the server.</p>
		example: <code>/getLogfile?format=ksx</code><br>
		example: <code>/getLogfile?format=ksx&amp;from=2013-12-24T13:15:00.000000&amp;to=2016-12-31T22:45:00.000000&amp;maxentries=30</code><br>
		
		<h3>getServer</h3>
		<p>Gives TCP Port of a Server (if this server is the KS-MANAGER).</p>
		example: <code>/getServer?format=ksx&amp;servername=MANAGER</code><br>
		example: <code>/getServer?format=ksx&amp;servername=MANAGER&amp;serverversion=2</code><br>
		
		<script type=\"text/javascript\">
		var CommandPlayground = document.getElementById(\"idCommandPlayground\");
		var OutputformatSelect = document.getElementById(\"idOutputformatSelect\");
		var Servicelist = document.getElementById(\"idServicelist\");
		var Submitbutton = document.getElementById(\"idSubmitbutton\");
		var PathtextLabel = document.getElementById(\"idPathLabel\");
		var PathInput = document.getElementById(\"idPathInput\");
		var SecondtextLabel = document.getElementById(\"idSecondtextLabel\");
		var SecondtextInput = document.getElementById(\"idSecondtextInput\");
		var SpanGetepRequestType = document.getElementById(\"idSpanGetepRequestType\");
		var GetepRequestTypeSelect = document.getElementById(\"idGetepRequestTypeSelect\");
		var Urldisplay = document.getElementById(\"idUrldisplay\");
		var PlaygroundOutput = document.getElementById(\"idPlaygroundOutput\");
		
		var prepareWebpage = function(){
			\"use strict\";
			//show playground
			if (true || -1 !== window.location.protocol.indexOf('http') && window.XMLHttpRequest){
				//show playground
				if(CommandPlayground){
					CommandPlayground.style.display = \"block\";
				}
				
				//test HMI and other services if transfered via http
				if(!!window.XMLHttpRequest){
					var HmiNode = document.getElementById(\"idHmi\");
					var request = new XMLHttpRequest();
					request.open(\"GET\", \"/getEP?requestType=OT_DOMAIN&path=/data/kshttp\", true);
					request.setRequestHeader(\"Accept\", \"text/ksx\");
					request.onreadystatechange = function(evt){
						var req = null;
						if (!evt){
							req = this;
						}else{
							req = evt.target;
						}
						if( req.readyState === 4 && req.status === 200){
							var listDomainEngProps = req.responseXML.getElementsByTagName(\"DomainEngProps\");
							var listServices = [];
							var i = 0;
							var DomainEngPropsClass = \"\";
							var DomainEngPropsId = \"\";
							for(i = 0; i < listDomainEngProps.length;i++){
								DomainEngPropsClass = listDomainEngProps[i].getElementsByTagName(\"classIdentifier\");
								if(DomainEngPropsClass && DomainEngPropsClass.length === 1 && DomainEngPropsClass[0].textContent == '/acplt/ov/domain'){
									DomainEngPropsId = listDomainEngProps[i].getElementsByTagName(\"identifier\");
									if(DomainEngPropsId && DomainEngPropsId.length === 1){
										if(DomainEngPropsId[0].textContent === 'hmi'){
											HmiNode.innerHTML = \"<h1>Human-Machine Interface</h1><p>A <a href='/hmi/'>HMI service</a> is available on this server.</p>\";
										}else{
											listServices.push(DomainEngPropsId[0].textContent);
										}
									}
								} 
							}
							if(listServices.length > 0){
								var ServicesNode = document.getElementById(\"idServices\");
								var ServicesHtml = \"<h1>Services</h1><p>There are the following non HMI services available on this server:</p><ul>\";
								for (i = 0; i < listServices.length; i++){
									ServicesHtml += \"<li><a href='/\"+listServices[i]+\"/'>\"+listServices[i]+\"</a></li>\";
								}
								ServicesHtml += \"</ul></p>\";
								ServicesNode.innerHTML = ServicesHtml;
							}
						}
					};
					request.timeout = 1000;
					request.send();
				}
			}
		};
		window.onload = prepareWebpage;
		Servicelist.onchange = function(evt){
			\"use strict\";
			PathtextLabel.firstChild.nodeValue = \"Path:\";
			PathtextLabel.style.display = \"inline\";
			if(Servicelist.options[Servicelist.options.selectedIndex].value === \"none\"){
				SecondtextLabel.style.display = \"none\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"getEP\"){
				if(PathInput.value === \"\"){
					PathInput.value = \"/TechUnits\";
				}
				SecondtextLabel.style.display = \"none\";
				SpanGetepRequestType.style.display = \"inline\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"setVar\"){
				if(PathInput.value === \"\"){
					PathInput.value = \"/TechUnits/add1.IN1\";
				}
				SecondtextInput.value = \"42\";
				SecondtextLabel.firstChild.nodeValue = \"new value: \";
				SecondtextLabel.style.display = \"inline\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"getVar\"){
				if(PathInput.value === \"\"){
					PathInput.value = \"/TechUnits/add1.IN1\";
				}
				SecondtextLabel.style.display = \"none\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"createObject\"){
				PathInput.value = \"/TechUnits/add1\";
				SecondtextInput.value = \"/Libraries/iec61131stdfb/add\";
				SecondtextLabel.firstChild.nodeValue = \"factory/class: \";
				SecondtextLabel.style.display = \"inline\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"deleteObject\"){
				PathInput.value = \"/TechUnits/add1\";
				SecondtextLabel.style.display = \"none\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"renameObject\"){
				PathInput.value = \"/TechUnits/add1\";
				SecondtextInput.value = \"/TechUnits/add2\";
				SecondtextLabel.firstChild.nodeValue = \"new name: \";
				SecondtextLabel.style.display = \"inline\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"link\"){
				PathInput.value = \"/TechUnits/add1.taskparent\";
				SecondtextInput.value = \"/Tasks/UrTask\";
				SecondtextLabel.firstChild.nodeValue = \"link partner: \";
				SecondtextLabel.style.display = \"inline\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"unlink\"){
				PathInput.value = \"/TechUnits/add1.taskparent\";
				SecondtextInput.value = \"/Tasks/UrTask\";
				SecondtextLabel.firstChild.nodeValue = \"link partner: \";
				SecondtextLabel.style.display = \"inline\";
				SpanGetepRequestType.style.display = \"none\";
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"getLogfile\"){
				PathtextLabel.style.display = \"none\";
				SecondtextLabel.style.display = \"inline\";
				SecondtextLabel.firstChild.nodeValue = \"maximal entries: \";
				SecondtextInput.value = \"10\";
				SpanGetepRequestType.style.display = \"none\";
			}else{
				SecondtextLabel.style.display = \"none\";
				SpanGetepRequestType.style.display = \"none\";
			}
			calculateUrl();
		};
		Submitbutton.onclick = document.getElementsByTagName(\"form\")[0].onsubmit = function(evt){
			\"use strict\";
			var req = new XMLHttpRequest();
			req.open(\"GET\", Urldisplay.value, true);
			req.timeout = 10000;
			req.onreadystatechange = RequestStatehandler;
			try{
				req.send();
			}catch(err){
				PlaygroundOutput.innerHTML = \"transmit error: \"+err;
				PlaygroundOutput.style.borderColor = \"red\";
			}
			return false;
		};
		var calculateUrl = function(){
			\"use strict\";
			var urlstring = \"/\"+Servicelist.options[Servicelist.options.selectedIndex].value+\"?format=\"+OutputformatSelect.options[OutputformatSelect.options.selectedIndex].value;
			if(Servicelist.options[Servicelist.options.selectedIndex].value == \"none\"){
				//nothing selected
				return;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"getEP\"){
				urlstring += \"&requestType=\"+GetepRequestTypeSelect.options[GetepRequestTypeSelect.options.selectedIndex].value;
				urlstring += \"&path=\"+PathInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"getVar\"){
				urlstring += \"&path=\"+PathInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"setVar\"){
				urlstring += \"&path=\"+PathInput.value;
				if(typeof escape === \"function\"){
					//escape is evil, but we need latin1 support
					urlstring += \"&newvalue=\"+escape(SecondtextInput.value);
				}else{
					urlstring += \"&newvalue=\"+encodeURIComponent(SecondtextInput.value);
				}
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"createObject\"){
				urlstring += \"&factory=\"+SecondtextInput.value;
				urlstring += \"&path=\"+PathInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"deleteObject\"){
				urlstring += \"&path=\"+PathInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"renameObject\"){
				urlstring += \"&path=\"+PathInput.value;
				urlstring += \"&newname=\"+SecondtextInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"link\"){
				urlstring += \"&path=\"+PathInput.value;
				urlstring += \"&element=\"+SecondtextInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"unlink\"){
				urlstring += \"&path=\"+PathInput.value;
				urlstring += \"&element=\"+SecondtextInput.value;
			}else if(Servicelist.options[Servicelist.options.selectedIndex].value == \"getLogfile\"){
				urlstring += \"&maxentries=\"+SecondtextInput.value;
			}else{
				return;
			}
			Urldisplay.value = urlstring;
			return urlstring;
		};
		OutputformatSelect.onchange = calculateUrl;
		PathInput.onkeyup = PathInput.onchange = calculateUrl;
		SecondtextInput.onkeyup = SecondtextInput.onchange = calculateUrl;
		GetepRequestTypeSelect.onchange = calculateUrl;
		var RequestStatehandler = function(evt){
			\"use strict\";
			var req = null;
			if (!evt){
				req = this;
			}else{
				req = evt.target;
			}
			if( req.readyState === 4 ){
				if(req.status === 0){
					PlaygroundOutput.innerHTML = \"The request failed. Timeout?\";
				}else{
					PlaygroundOutput.innerHTML = req.responseText;
				}
				//adjust height to the line count
				var ResponseArray = req.responseText.split(String.fromCharCode(10));
				var maxlength = 0;
				var i = 0;
				for(i = 0;i<ResponseArray.length;i++){
					if(ResponseArray[i].length > maxlength){
						maxlength = ResponseArray[i].length;
					}
				}
				if(maxlength > 30){
					PlaygroundOutput.cols = maxlength;
					PlaygroundOutput.style.width = \"99%\";
				}
				if(ResponseArray.length > 3){
					PlaygroundOutput.rows = ResponseArray.length;
				}
				if(req.status == 200){
					PlaygroundOutput.style.borderColor = \"#8080FF\";
					Submitbutton.style.backgroundColor = \"limegreen\";
					Submitbutton.value = \"response received\";
				}else{
					PlaygroundOutput.style.borderColor = \"red\";
					Submitbutton.style.backgroundColor = \"red\";
					Submitbutton.value = \"error received\";
				}
				timeoutID = window.setTimeout(function(){
					Submitbutton.value = \"send request\";
					Submitbutton.style.backgroundColor = \"\";
				},1500);
			}
		};
		//init url
		calculateUrl();
		
		//##################### Autofill for the path
		var timeoutID = null;
		var autofillmagicXHR = new XMLHttpRequest();
		var pathdirentries = document.getElementById(\"idPathdirentries\");
		var pathvarentries = document.getElementById(\"idPathvarentries\");
		
		var requestBasePath = \"\";
		var activeRequestPath = \"\";
		
		PathInput.onkeydown = PathInput.onmousedown = function(evt){
			\"use strict\";
			//no change, so we need no request
			if (activeRequestPath === PathInput.value) return;
			window.clearTimeout(timeoutID);
			autofillmagicXHR.abort();
		};
		
		PathInput.onkeyup = PathInput.onmouseup = function(evt){
			\"use strict\";
			//no change, so we need no request
			if (activeRequestPath === PathInput.value) return;
			
			//################## insert information
			var insertautofillinformation = function(evt){
				var req = null;
				if (!evt){
					req = this;
				}else{
					req = evt.target;
				}
				if( req.readyState === 4 && req.status === 200){
					//############### Children
					var resultlist = req.responseXML.getElementsByTagName(\"DomainEngProps\");
					if(resultlist.length !== 0){
						while (pathdirentries.firstChild) {
							pathdirentries.removeChild(pathdirentries.firstChild);
						}
					}
					var i = 0;
					var access = null;
					var newPath = null;
					var labelname = \"\";
					var newOption = null;
					for (i = 0;i < resultlist.length;i++){
						access = resultlist[i].getElementsByTagName(\"access\")[0].textContent;
						newPath = requestBasePath;
						if(requestBasePath === \"/\"){
							//no need to append a slash or dot at the root domain
							labelname = \"child\";
						}else if(access.indexOf(\"part\") !== -1){
							//we have a part here, so delimiter is a point
							newPath += \".\";
							labelname = \"part\";
						}else{
							newPath += \"/\";
							labelname = \"child\";
						}
						newPath = newPath + resultlist[i].getElementsByTagName(\"identifier\")[0].textContent.trim();
						newOption = new Option(newPath);
						newOption.label = labelname;
						pathdirentries.appendChild(newOption);
					}
					//############### Parts and Variables
					resultlist = req.responseXML.getElementsByTagName(\"VariableEngProps\");
					if(resultlist.length !== 0){
						while (pathvarentries.firstChild) {
							pathvarentries.removeChild(pathvarentries.firstChild);
						}
					}
					for (i = 0;i < resultlist.length;i++){
						access = resultlist[i].getElementsByTagName(\"access\")[0].textContent;
						newPath = requestBasePath;
						if(access.indexOf(\"part\") !== -1){
							//we have a part here, so delimiter is a point
							newPath += \".\";
						}else if(requestBasePath !== \"/\"){
							newPath += \"/\";
						}
						labelname = \"variable\";
						newPath = newPath + resultlist[i].getElementsByTagName(\"identifier\")[0].textContent.trim();
						newOption = new Option(newPath);
						newOption.label = labelname;
						pathvarentries.appendChild(newOption);
					}
				}
			};
			
			//################## request information
			var requestautofillinformation = function(evt){
				var lastSlash = PathInput.value.lastIndexOf(\"/\");
				var lastDot = PathInput.value.lastIndexOf(\".\");
				var requestMask = \"\";
				if(lastSlash > lastDot){
					//our basepath is something like /TechUnits/add1
					requestBasePath = PathInput.value.substring(0, lastSlash);
					requestMask = PathInput.value.substring(lastSlash+1)+\"*\";
				}else if(lastSlash < lastDot){
					//our basepath is a part like /TechUnits/setvar.value
					requestBasePath = PathInput.value.substring(0, lastDot);
					requestMask = PathInput.value.substring(lastDot+1)+\"*\";
				}
				
				if(requestBasePath === \"\"){
					//the root domain, needs to end with a slash
					requestBasePath = \"/\";
				}
				//disable old request
				autofillmagicXHR.abort();
				autofillmagicXHR = new XMLHttpRequest();
				
				autofillmagicXHR.open(\"GET\", \"/getEP?requestType=OT_ANY&path=\"+requestBasePath+\"&nameMask=\"+requestMask, true);
				
				autofillmagicXHR.setRequestHeader(\"Accept\", \"text/ksx\");
				autofillmagicXHR.timeout = 1000;
				autofillmagicXHR.onreadystatechange = insertautofillinformation;
				autofillmagicXHR.send();
				activeRequestPath = PathInput.value;
			};
			
			//################## trigger check in a few ms
			window.clearTimeout(timeoutID);
			autofillmagicXHR.abort();
			timeoutID = window.setTimeout(requestautofillinformation , 300);
		};
		</script>
	</body>
</html>
";
      mimetype : INPUT STRING = "text/html";
      encoding : INPUT STRING = "windows-1252";
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 450;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /Tasks :
    CLASS /acplt/ov/domain;
 END_INSTANCE;

 INSTANCE  /Tasks/UrTask :
    CLASS /acplt/fb/task;
    VARIABLE_VALUES
      actimode : INPUT INT = 1;
      proctime : INPUT TIME = 2018-05-15 08:19:47.874729;
      cyctime : INPUT TIME_SPAN = 1.000000;
      ErrState : OUTPUT INT = 0;
      calctime : OUTPUT TIME_SPAN = 0.000025;
      Xpos : INPUT INT = 0;
      Ypos : INPUT INT = 0;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 572;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits :
    CLASS /acplt/ov/domain;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer :
    CLASS /acplt/openAASDiscoveryServer/DiscoveryServer;
    VARIABLE_VALUES
      threadDataHndl[0] : OUTPUT INT = {};
      messageCount : OUTPUT UINT = 0;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1272;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer.ComponentManager :
    CLASS /acplt/openAASDiscoveryServer/ComponentManagerDS;
    VARIABLE_VALUES
      messageBoxSize : INPUT UINT = 10;
      messageBoxIsFiFo : INPUT BOOL = TRUE;
      iexreq : INPUT BOOL = TRUE;
      eexreq : OUTPUT BOOL = FALSE;
      maxcalctime : INPUT TIME_SPAN = 0.000000;
      methcount : OUTPUT UINT = 638;
      actimode : INPUT INT = 1;
      proctime : INPUT TIME = 2018-05-11 13:06:27.072230;
      cyctime : INPUT TIME_SPAN = 0.000000;
      ErrState : OUTPUT INT = 0;
      calctime : OUTPUT TIME_SPAN = 0.000003;
      Xpos : INPUT INT = 0;
      Ypos : INPUT INT = 0;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1273;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer.ComponentManager.INBOX :
    CLASS /acplt/MessageSys/inbox;
    VARIABLE_VALUES
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1274;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer.ComponentManager.OUTBOX :
    CLASS /acplt/MessageSys/inbox;
    VARIABLE_VALUES
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1275;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer.Security :
    CLASS /acplt/openAASDiscoveryServer/Security;
    VARIABLE_VALUES
      URMSWrapperPath : INPUT STRING = "";
      AddURMSWrapper : INPUT BOOL = FALSE;
      RemoveURMSWrapper : INPUT BOOL = FALSE;
      URMSWrapper[0] : OUTPUT STRING = {};
      CAWrapperPath : INPUT STRING = "";
      AddCAWrapper : INPUT BOOL = FALSE;
      RemoveCAWrapper : INPUT BOOL = FALSE;
      CAWrapper[0] : OUTPUT STRING = {};
      URMSWrapperPaths[0] : INPUT STRING = {};
      CAWrapperPaths[0] : INPUT STRING = {};
      SecurityMessage : INPUT STRING = "";
      ProcessSecurityMessage : INPUT BOOL = FALSE;
      DBWrapperPath : INPUT STRING = "/TechUnits/DB1";
      AddDBWrapper : INPUT BOOL = FALSE;
      RemoveDBWrapper : INPUT BOOL = FALSE;
      DBWrapper[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      DSServicePath : INPUT STRING = "/TechUnits/DSSecurity";
      AddDSService : INPUT BOOL = FALSE;
      RemoveDSService : INPUT BOOL = FALSE;
      DSService[1] : OUTPUT STRING = {"/TechUnits/DSSecurity"};
      DSServicePaths[1] : INPUT STRING = {"/TechUnits/DSSecurity"};
      UseDSServices : INPUT BOOL = FALSE;
      UsedDSServicePaths[1] : OUTPUT STRING = {"/TechUnits/DSSecurity"};
      DBWrapperPaths[1] : INPUT STRING = {"/TechUnits/DB1"};
      DSServicePathForConfig : INPUT STRING = "/TechUnits/DSSecurity";
      ConfigDSServices : INPUT BOOL = FALSE;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1276;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer.Registration :
    CLASS /acplt/openAASDiscoveryServer/Registration;
    VARIABLE_VALUES
      SEWrapperPath : INPUT STRING = "";
      AddSEWrapper : INPUT BOOL = FALSE;
      RemoveSEWrapper : INPUT BOOL = FALSE;
      SEWrapper[0] : OUTPUT STRING = {};
      SEWrapperPaths[0] : INPUT STRING = {};
      RegistrationMessage : INPUT STRING = "";
      ProcessRegistrationMessage : INPUT BOOL = FALSE;
      UnregistrationMessage : INPUT STRING = "";
      ProcessUnregistrationMessage : INPUT BOOL = FALSE;
      DBWrapperPath : INPUT STRING = "/TechUnits/DB1";
      AddDBWrapper : INPUT BOOL = FALSE;
      RemoveDBWrapper : INPUT BOOL = FALSE;
      DBWrapper[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      DSServicePath : INPUT STRING = "/TechUnits/DSUnregistration";
      AddDSService : INPUT BOOL = FALSE;
      RemoveDSService : INPUT BOOL = FALSE;
      DSService[2] : OUTPUT STRING = {"/TechUnits/DSRegistration" , "/TechUnits/DSUnregistration"};
      DSServicePaths[2] : INPUT STRING = {"/TechUnits/DSRegistration" , "/TechUnits/DSUnregistration"};
      UseDSServices : INPUT BOOL = FALSE;
      UsedDSServicePaths[2] : OUTPUT STRING = {"/TechUnits/DSRegistration" , "/TechUnits/DSUnregistration"};
      DBWrapperPaths[1] : INPUT STRING = {"/TechUnits/DB1"};
      DSServicePathForConfig : INPUT STRING = "/TechUnits/DSUnregistration";
      ConfigDSServices : INPUT BOOL = FALSE;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1277;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DiscoveryServer.Search :
    CLASS /acplt/openAASDiscoveryServer/Search;
    VARIABLE_VALUES
      SEWrapperPath : INPUT STRING = "";
      AddSEWrapper : INPUT BOOL = FALSE;
      RemoveSEWrapper : INPUT BOOL = FALSE;
      SEWrapper[0] : OUTPUT STRING = {};
      SEWrapperPaths[0] : INPUT STRING = {};
      SearchMessage : INPUT STRING = "";
      ProcessSearchMessage : INPUT BOOL = FALSE;
      DBWrapperPath : INPUT STRING = "/TechUnits/DB1";
      AddDBWrapper : INPUT BOOL = FALSE;
      RemoveDBWrapper : INPUT BOOL = FALSE;
      DBWrapper[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      DSServicePath : INPUT STRING = "/TechUnits/DSSearch";
      AddDSService : INPUT BOOL = FALSE;
      RemoveDSService : INPUT BOOL = FALSE;
      DSService[1] : OUTPUT STRING = {"/TechUnits/DSSearch"};
      DSServicePaths[1] : INPUT STRING = {"/TechUnits/DSSearch"};
      UseDSServices : INPUT BOOL = FALSE;
      UsedDSServicePaths[1] : OUTPUT STRING = {"/TechUnits/DSSearch"};
      DBWrapperPaths[1] : INPUT STRING = {"/TechUnits/DB1"};
      DSServicePathForConfig : INPUT STRING = "/TechUnits/DSSearch";
      ConfigDSServices : INPUT BOOL = FALSE;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1278;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/TestClient :
    CLASS /acplt/openAASDiscoveryServer/TestClient;
    VARIABLE_VALUES
      EndpointDS : INPUT STRING = "134.130.125.86:MANAGER:/TechUnits/DiscoveryServer.ComponentManager";
      EndpointTestClient : INPUT STRING = "134.130.125.86:MANAGER:/TechUnits/TestClient.ComponentManager";
      ComponentID : INPUT STRING = "TC123";
      errorFlag : OUTPUT BOOL = FALSE;
      errorMessage : OUTPUT STRING = "";
      CertificateTC : INPUT STRING = "certificateTC";
      SendSecurityMessage : INPUT BOOL = FALSE;
      certificateDS : OUTPUT STRING = "";
      securityKey : OUTPUT STRING = "";
      ComponentContent : INPUT STRING = "\"endpoints\":[{\"protocolType\":\"acplt_ks\",\"endpointSring\":\"134.130.125.86:MANAGER:/TechUnits/TestClient.ComponentManager\"}{\"protocolType\":\"opcua\",\"endpointString\":\"opc.tcp://134.130.125.86:16664;nsindex=1, nodeId=23\"}],\"assetID\":\"asset_TC123\"";
      SendRegistrationMessage : INPUT BOOL = FALSE;
      SendUnregistrationMessage : INPUT BOOL = FALSE;
      Tags : INPUT STRING = "\"assetID\":\"asset_TC123\"";
      SendSearchMessage : INPUT BOOL = FALSE;
      AASFound : OUTPUT STRING = "";
      reset : INPUT BOOL = FALSE;
      prepairForNextMessage : INPUT BOOL = FALSE;
      messageCount : OUTPUT UINT = 0;
      state : OUTPUT UINT = 1;
      iexreq : INPUT BOOL = TRUE;
      eexreq : OUTPUT BOOL = FALSE;
      maxcalctime : INPUT TIME_SPAN = 0.000000;
      methcount : OUTPUT UINT = 638;
      actimode : INPUT INT = 1;
      proctime : INPUT TIME = 2018-05-15 08:09:10.214979;
      cyctime : INPUT TIME_SPAN = 0.000000;
      ErrState : OUTPUT INT = 0;
      calctime : OUTPUT TIME_SPAN = 0.000001;
      Xpos : INPUT INT = 0;
      Ypos : INPUT INT = 0;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1279;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/TestClient.ComponentManager :
    CLASS /acplt/openAASDiscoveryServer/ComponentManagerTC;
    VARIABLE_VALUES
      messageBoxSize : INPUT UINT = 10;
      messageBoxIsFiFo : INPUT BOOL = TRUE;
      iexreq : INPUT BOOL = TRUE;
      eexreq : OUTPUT BOOL = FALSE;
      maxcalctime : INPUT TIME_SPAN = 0.000000;
      methcount : OUTPUT UINT = 638;
      actimode : INPUT INT = 1;
      proctime : INPUT TIME = 2018-05-11 13:06:39.481070;
      cyctime : INPUT TIME_SPAN = 0.000000;
      ErrState : OUTPUT INT = 0;
      calctime : OUTPUT TIME_SPAN = 0.000002;
      Xpos : INPUT INT = 0;
      Ypos : INPUT INT = 0;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1280;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/TestClient.ComponentManager.INBOX :
    CLASS /acplt/MessageSys/inbox;
    VARIABLE_VALUES
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1281;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/TestClient.ComponentManager.OUTBOX :
    CLASS /acplt/MessageSys/inbox;
    VARIABLE_VALUES
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1282;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DSSecurity :
    CLASS /acplt/DSServices/DSSecurityServiceType1;
    VARIABLE_VALUES
      URMSWrapperUsed[0] : OUTPUT STRING = {};
      CAWrapperUsed[0] : OUTPUT STRING = {};
      DBWrapperUsed[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1283;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DB1 :
    CLASS /acplt/Databases/SQLite3;
    VARIABLE_VALUES
      table : INPUT STRING = "";
      ip : INPUT STRING = "";
      cert : INPUT STRING = "";
      query : INPUT STRING = "";
      io : INPUT BOOL = FALSE;
      Endpoint : INPUT STRING = "";
      User : INPUT STRING = "";
      Password : INPUT STRING = "";
      StartConnect : INPUT BOOL = FALSE;
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1284;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DSRegistration :
    CLASS /acplt/DSServices/DSRegistrationServiceType1;
    VARIABLE_VALUES
      SEWrapperUsed[0] : OUTPUT STRING = {};
      DBWrapperUsed[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1285;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DSUnregistration :
    CLASS /acplt/DSServices/DSUnregistrationServiceType1;
    VARIABLE_VALUES
      SEWrapperUsed[0] : OUTPUT STRING = {};
      DBWrapperUsed[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1286;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /TechUnits/DSSearch :
    CLASS /acplt/DSServices/DSSearchServiceType1;
    VARIABLE_VALUES
      SEWrapperUsed[0] : OUTPUT STRING = {};
      DBWrapperUsed[1] : OUTPUT STRING = {"/TechUnits/DB1"};
      idH : INPUT UINT = 0;
      idL : INPUT UINT = 1287;
    END_VARIABLE_VALUES;
 END_INSTANCE;

 INSTANCE  /Cons :
    CLASS /acplt/ov/domain;
 END_INSTANCE;

 INSTANCE  /Libraries :
    CLASS /acplt/ov/domain;
 END_INSTANCE;

 LINK
     OF_ASSOCIATION tasklist;
     PARENT taskparent : CLASS unknown
           = /Tasks/UrTask;
     CHILDREN taskchild : CLASS unknown
           = {/TechUnits/DiscoveryServer.ComponentManager , /TechUnits/TestClient.ComponentManager , /TechUnits/TestClient};
 END_LINK;

 LINK
     OF_ASSOCIATION tasklist;
     PARENT taskparent : CLASS unknown
           = /Tasks/UrTask;
     CHILDREN taskchild : CLASS unknown
           = {/TechUnits/DiscoveryServer.ComponentManager};
 END_LINK;

 LINK
     OF_ASSOCIATION tasklist;
     PARENT taskparent : CLASS unknown
           = /Tasks/UrTask;
     CHILDREN taskchild : CLASS unknown
           = {/TechUnits/TestClient};
 END_LINK;

 LINK
     OF_ASSOCIATION tasklist;
     PARENT taskparent : CLASS unknown
           = /Tasks/UrTask;
     CHILDREN taskchild : CLASS unknown
           = {/TechUnits/TestClient.ComponentManager};
 END_LINK;

 INSTANCE  /vendor :
    CLASS /acplt/ov/domain;
    VARIABLE_VALUES
      libraries[15] : OUTPUT STRING = {"/acplt/ov" , "/acplt/ksbase" , "/acplt/TCPbind" , "/acplt/ksxdr" , "/acplt/kshttp" , "/acplt/fb" , "/acplt/identification" , "/acplt/propertyValueStatement" , "/acplt/lifeCycleEntry" , "/acplt/MessageSys" , "/acplt/ksapi" , "/acplt/openaas" , "/acplt/openAASDiscoveryServer" , "/acplt/DSServices" , "/acplt/Databases"};
      classes[97] : OUTPUT STRING = {"/acplt/ov/domain" , "/acplt/ov/library" , "/acplt/ksbase/RootComTask" , "/acplt/ksbase/ServerRep" , "/acplt/ksbase/Manager" , "/acplt/ksbase/NoneTicketAuthenticator" , "/acplt/ksbase/NoneTicketGenerator" , "/acplt/TCPbind/TCPChannel" , "/acplt/TCPbind/aresWorker" , "/acplt/TCPbind/TCPListener" , "/acplt/ksxdr/xdrIdentificator" , "/acplt/ksxdr/xdrClientHandler" , "/acplt/ksxdr/xdrSimpleTicketAuthenticator" , "/acplt/ksxdr/xdrManagerCom" , "/acplt/ksxdr/xdrClient" , "/acplt/ksxdr/PMAskList" , "/acplt/kshttp/httpIdentificator" , "/acplt/kshttp/httpclienthandler" , "/acplt/kshttp/getvarpushhandler" , "/acplt/kshttp/httpSimpleTicketAuthenticator" , "/acplt/kshttp/httpManagerCom" , "/acplt/kshttp/httpClient" , "/acplt/kshttp/genericHttpClient" , "/acplt/kshttp/authenticatedsession" , "/acplt/kshttp/staticfile" , "/acplt/fb/dbinfoclass" , "/acplt/fb/task" , "/acplt/fb/connection" , "/acplt/fb/functionchart" , "/acplt/fb/boolport" , "/acplt/fb/intport" , "/acplt/fb/uintport" , "/acplt/fb/singleport" , "/acplt/fb/doubleport" , "/acplt/fb/timeport" , "/acplt/fb/timespanport" , "/acplt/fb/stringport" , "/acplt/fb/anyport" , "/acplt/fb/boolvecport" , "/acplt/fb/intvecport" , "/acplt/fb/uintvecport" , "/acplt/fb/singlevecport" , "/acplt/fb/doublevecport" , "/acplt/fb/timevecport" , "/acplt/fb/timespanvecport" , "/acplt/fb/stringvecport" , "/acplt/identification/Identification" , "/acplt/propertyValueStatement/PropertyValueStatement" , "/acplt/propertyValueStatement/CarrierId" , "/acplt/propertyValueStatement/PropertyId" , "/acplt/propertyValueStatement/ExpressionLogic" , "/acplt/propertyValueStatement/ExpressionSemantic" , "/acplt/propertyValueStatement/View" , "/acplt/propertyValueStatement/Visibility" , "/acplt/propertyValueStatement/PropertyValueStatementList" , "/acplt/propertyValueStatement/MatchPVSRA" , "/acplt/propertyValueStatement/MatchPVSLRA" , "/acplt/propertyValueStatement/PVSGenerator" , "/acplt/propertyValueStatement/HMIHelperPVSL" , "/acplt/propertyValueStatement/modelmanager" , "/acplt/lifeCycleEntry/LifeCycleEntry" , "/acplt/lifeCycleEntry/LifeCycleArchive" , "/acplt/MessageSys/MsgDelivery" , "/acplt/MessageSys/Message" , "/acplt/MessageSys/inbox" , "/acplt/MessageSys/msgIdentificator" , "/acplt/MessageSys/msgHandler" , "/acplt/ksapi/createObject" , "/acplt/ksapi/deleteObject" , "/acplt/ksapi/getVar" , "/acplt/ksapi/setVar" , "/acplt/ksapi/getEPidentifiers" , "/acplt/ksapi/getEP" , "/acplt/ksapi/Variable" , "/acplt/ksapi/renameObject" , "/acplt/ksapi/linkObject" , "/acplt/ksapi/unlinkObject" , "/acplt/openaas/Folder" , "/acplt/openaas/SubModel" , "/acplt/openaas/AASComponentManager" , "/acplt/openaas/aas" , "/acplt/openaas/InterfaceDiscoveryServer" , "/acplt/openaas/AASConvertListType" , "/acplt/openaas/modelmanager" , "/acplt/openaas/simpleMessageCreator" , "/acplt/openAASDiscoveryServer/Security" , "/acplt/openAASDiscoveryServer/Registration" , "/acplt/openAASDiscoveryServer/Search" , "/acplt/openAASDiscoveryServer/ComponentManagerDS" , "/acplt/openAASDiscoveryServer/DiscoveryServer" , "/acplt/openAASDiscoveryServer/ComponentManagerTC" , "/acplt/openAASDiscoveryServer/TestClient" , "/acplt/DSServices/DSRegistrationServiceType1" , "/acplt/DSServices/DSUnregistrationServiceType1" , "/acplt/DSServices/DSSearchServiceType1" , "/acplt/DSServices/DSSecurityServiceType1" , "/acplt/Databases/SQLite3"};
      associations[22] : OUTPUT STRING = {"/acplt/ov/containment" , "/acplt/ov/instantiation" , "/acplt/ov/inheritance" , "/acplt/ov/parentrelationship" , "/acplt/ov/childrelationship" , "/acplt/ov/construction" , "/acplt/ov/embedment" , "/acplt/ksbase/AssocComTaskList" , "/acplt/ksbase/AssocChannelClientHandler" , "/acplt/ksbase/AssocChannelDataHandler" , "/acplt/ksbase/AssocCurrentChannel" , "/acplt/ksbase/AssocClientToTicketGenerator" , "/acplt/TCPbind/AssocSpecificClientHandler" , "/acplt/fb/variables" , "/acplt/fb/tasklist" , "/acplt/fb/inputconnections" , "/acplt/fb/outputconnections" , "/acplt/MessageSys/MsgDelivery2CurrentMessage" , "/acplt/MessageSys/MsgDelivery2Message" , "/acplt/MessageSys/Message2Channel" , "/acplt/MessageSys/SendExtension2Message" , "/acplt/ksapi/operationToVariable"};
      instanceCount : OUTPUT UINT = 1282;
      database_fragmentation : OUTPUT UINT = 0;
      database_free : OUTPUT UINT = 49618144;
      database_name : OUTPUT STRING = "/home/ubuntu/AcpltDevelopmentKit/acplt/servers/MANAGER/db.ovd";
      database_size : OUTPUT UINT = 50003968;
      database_started : OUTPUT BOOL = TRUE;
      database_used : OUTPUT UINT = 385824;
      name : OUTPUT STRING = "Lehrstuhl fuer Prozessleittechnik, RWTH Aachen";
      ks_version : OUTPUT STRING = "";
      libov_version : OUTPUT STRING = "2.0.0";
      semantic_flags[32] : OUTPUT STRING = {"" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , ""};
      server_description : OUTPUT STRING = "generic ACPLT/OV server";
      server_name : OUTPUT STRING = "MANAGER";
      server_time : OUTPUT TIME = 2018-05-15 08:19:47.424950;
      server_version : OUTPUT STRING = "1.3.2";
      server_run : INPUT BOOL = TRUE;
      serverPID : OUTPUT UINT = 31549;
      startup_time : OUTPUT TIME = 2018-05-15 08:09:00.755900;
      running_db_backup : OUTPUT BOOL = FALSE;
      write_db_backup : OUTPUT BOOL = FALSE;
      ov_time_offset : INPUT TIME_SPAN = 0.000000;
      ks_maxitemsperrequest : INPUT UINT = 0;
      maxstringlength : INPUT UINT = 0;
      maxvectorlength : INPUT UINT = 0;
      maxnamelength : INPUT UINT = 255;
      maxhierarchydepth : INPUT UINT = 64;
      ov_scheduler_allowedjitter : INPUT UINT = 0;
      ov_scheduler_numexceeds : OUTPUT UINT = 0;
      cmdline_options : OUTPUT STRING = "CONFDIR=/home/ubuntu/AcpltDevelopmentKit/acplt/servers/MANAGER/";
    END_VARIABLE_VALUES;
 END_INSTANCE;
